@model Job_Offers_Website.Models.Job

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-lg-8">
            <div class="card text-center">
                <div class="card-header">
                    <h3 class="display-5">Edit Job </h3>
                </div>
                <div class="card-body">
                    <div class="mb-3 row">
                        @Html.ActionLink("Back to List jobs ", "Index", null, new { @class = "btn btn-outline-info" })
                    </div>
                    @using (Html.BeginForm("Edit", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.JobImg)
                        <!--show error-->
                        <div class="alert alert-danger" id="div_error" role="alert" style="display:none">
                            <span id="view_error">
                            </span>
                        </div>
                        <!--job titel-->
                        <div class="mb-3 row">
                            <label for="inputJobTitle" class="col-md-4 col-form-label"><strong>Job Title</strong> </label>
                            @*@Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "col-sm-2 col-form-label" })*@
                            <div class="col-sm-6">
                                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!--JobContent-->
                        <div class="mb-3 row">
                            <label for="inputJobContent" class="col-md-4 col-form-label"><strong>Job Description</strong> </label>
                            @*@Html.LabelFor(model => model.JobContent, htmlAttributes: new { @class = "col-sm-2 col-form-label" })*@
                            <div class="col-sm-8">
                                @Html.EditorFor(model => model.JobContent, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                                @Html.ValidationMessageFor(model => model.JobContent, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!--job img-->
                        <div class="mb-3 row">
                            <label for="inputImg" class="col-sm-4 col-form-label"><strong>Job Imge </strong> </label>
                            @*@Html.LabelFor(model => model.JobImg, htmlAttributes: new { @class = "col-sm-2 col-form-label" })</strong>*@
                            <div class="col-sm-8">
                                <input type="file" id="job_img" class="form-control-file" name="upload" />
                                @Html.ValidationMessageFor(model => model.JobImg, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!--Category name-->
                        <div class="mb-3 row">
                            <label for="inputCategory" class="col-md-4 col-form-label"><strong>Category Name</strong> </label>
                            @*@Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-sm-6">
                                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control form-control-lg" })
                                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" id="btn_save" value=" Save " class="btn btn-primary btn-lg" />
                            </div>


                        </div>

                    }
                </div>
            </div>
        </div>
    </div>

</div>






@*@using (Html.BeginForm("Edit", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.JobImg)


            <div class="form-group">
                <div class="alert alert-danger" id="div_error" role="alert" style="display:none">
                    <span id="view_error">
                    </span>
                </div>
                @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobContent, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.JobContent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.JobContent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobImg, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" id="job_img" class="form-control-file" name="upload" />
                    @Html.ValidationMessageFor(model => model.JobImg, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="btn_save" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section scripts
{
    <script>
        jQuery(document).ready(function () {
            $("#btn_save").click(function () {
                //check if input empty
                //if ($("#job_img").val == "")
                //{
                $("#view_error").text("");
                $("#div_error").fadeOut();

                //    $("#view_error").append("Please, Select Image For Job Entry ??");
                //    return false;
                //}
                //check if extention is vaild
                if ($("#job_img").val() != "") {
                    var filename = document.getElementById("job_img").value;
                    var extention_img = filename.substr(filename.lastIndexOf('.') + 1);
                    var extention_arry = ['jpg', 'png', 'jbeg', 'gif', 'bmb'];
                    if ($.inArray(extention_img, extention_arry) == -1) {
                        $("#div_error").fadeIn();
                        $("#view_error").append("Please, Select  Vaild extention Image For Job Entry ??");
                        return false;
                    }
                    //check if file size is vaild 2mb
                    var fileSize = document.getElementById("job_img").files[0].size / 1024 / 1024;
                    if (fileSize > 2) {
                        $("#div_error").fadeIn();
                        $("#view_error").append("Select Image for Job Entry bigger Than 2MB  !!!");
                        return false;
                    }
                }
            });
        });
    </script>

}
